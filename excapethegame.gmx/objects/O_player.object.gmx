<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>S_playerDown</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Player variables

//Movement Vars
player_speed = 3;
hspd = 0;
vspd = 0;

image_speed = 0.2;

//Health
currentHealth = 100;
maxHealth = 100;

frozen = false;

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Player movement 

var left = keyboard_check(ord('A'));
var left2 = keyboard_check(vk_left);
var right = keyboard_check(ord('D'));
var right2 = keyboard_check(vk_right);
var down = keyboard_check(ord('S'));
var down2 = keyboard_check(vk_down);
var up = keyboard_check(ord('W'));
var up2 = keyboard_check(vk_up);

//Death 
if (currentHealth &lt;= 0)
{
    game_end();
}

//Movement
if(frozen == false)
{
    if(!left || !left2 || right || right2)
    {
        hspd = 0;
    }
    
    if(!up || !up2 || down || down2)
    {
        vspd = 0;
    }
    
    if(left || left2)
    {
        hspd = -player_speed;
        sprite_index = S_playerLeft;
    }
    
    if(right || right2)
    {
        hspd = player_speed;
        sprite_index = S_playerRight;
    }
    
    if(up || up2)
    {
        vspd = -player_speed;
        sprite_index = S_playerUp;
    }
    
    if(down || down2)
    {
        vspd = player_speed;
        sprite_index = S_playerDown;
    }
    
    if((left || left2) &amp;&amp; (up || up2))
    {
        sprite_index = S_playerLeft;
    }
    
    if((left || left2) &amp;&amp; (down || down2))
    {
        sprite_index = S_playerLeft;
    }
   
    if((right || right2) &amp;&amp; (up || up2))
    {
        sprite_index = S_playerRight;
    }
    
    if((right || right2) &amp;&amp; (down || down2))
    {
        sprite_index = S_playerRight;
    }
    
    
    if(place_meeting(x + hspd, y, O_wall))
    {
        while(!place_meeting(x + sign(hspd), y, O_wall))
        {
            x += sign(hspd);
        }
        hspd = 0;
    }
    
    if(place_meeting(x, y + vspd, O_wall))
    {
        while(!place_meeting(x, y + sign(vspd), O_wall))
        {
            y += sign(vspd);
        }
        vspd = 0;
    }
    
    x += hspd;
    y += vspd;
    
    if(hspd == 0 &amp;&amp; vspd == 0)
    {
        image_speed = 0;
    }
    else
    {
        image_speed = 0.2;
    }
    
    if(place_meeting(x, y, O_doorInteraction))
    {
        if(keyboard_check(ord('E')))
        {
         instance_create(view_xview[0], view_yview[0], O_terminal);
         instance_create(view_xview[0] + 116, view_yview[0]+145, O_textInput);
         global.enterPressed = false;
        }
    }
    
    if(place_meeting(x, y, O_doorInteraction2))
    {
        if(keyboard_check(ord('E')))
        {
         instance_create(view_xview[0], view_yview[0], O_terminal2);
         instance_create(view_xview[0] + 116, view_yview[0]+145, O_textInput);
         global.enterPressed = false;
        }
    }
    
    if(place_meeting(x, y, O_doorInteraction3))
    {
        if(keyboard_check(ord('E')))
        {
         instance_create(view_xview[0], view_yview[0], O_terminal3);
         instance_create(view_xview[0] + 116, view_yview[0]+145, O_textInput);
         global.enterPressed = false;
        }
    }
    
    if(place_meeting(x, y, O_doorInteraction4))
    {
        if(keyboard_check(ord('E')))
        {
         instance_create(view_xview[0], view_yview[0], O_terminal4);
         instance_create(view_xview[0] + 116, view_yview[0]+145, O_textInput);
         global.enterPressed = false;
        }
    }
    
    if(place_meeting(x, y, O_doorInteraction6))
    {
        if(keyboard_check(ord('E')))
        {
         instance_create(view_xview[0], view_yview[0], O_terminal5);
         instance_create(view_xview[0] + 116, view_yview[0]+145, O_textInput);
         global.enterPressed = false;
        }
    }
    
    if(place_meeting(x, y, O_doorInteraction7))
    {
        if(keyboard_check(ord('E')))
        {
         instance_create(view_xview[0], view_yview[0], O_terminal6);
         instance_create(view_xview[0] + 116, view_yview[0]+145, O_textInput);
         global.enterPressed = false;
        }
    }
    
    if(place_meeting(x, y, O_doorInteraction8))
    {
        if(keyboard_check(ord('E')))
        {
         instance_create(view_xview[0], view_yview[0], O_terminal7);
         instance_create(view_xview[0] + 116, view_yview[0]+145, O_textInput);
         global.enterPressed = false;
        }
    }
    
    if(place_meeting(x, y, O_doorInteraction9))
    {
        if(keyboard_check(ord('E')))
        {
         instance_create(view_xview[0], view_yview[0], O_terminal8);
         instance_create(view_xview[0] + 116, view_yview[0]+145, O_textInput);
         global.enterPressed = false;
        }
    }
    
    if(place_meeting(x, y, O_doorInteraction10))
    {
        if(keyboard_check(ord('E')))
        {
         instance_create(view_xview[0], view_yview[0], O_terminal9);
         instance_create(view_xview[0] + 116, view_yview[0]+145, O_textInput);
         global.enterPressed = false;
        }
    }
    
    if(place_meeting(x, y, O_doorInteraction11))
    {
        if(keyboard_check(ord('E')))
        {
         instance_create(view_xview[0], view_yview[0], O_terminal10);
         instance_create(view_xview[0] + 116, view_yview[0]+145, O_textInput);
         global.enterPressed = false;
        }
    }
    
    if(place_meeting(x, y, O_note))
    {
         instance_create(view_xview[0] + 256, view_yview[0] + 192, O_notePage);
    }
    else
    {
        instance_destroy(O_notePage);
    }
    
    if(place_meeting(x, y, O_note2))
    {
         instance_create(view_xview[0] + 256, view_yview[0] + 192, O_notePage2);
    }
    else
    {
        instance_destroy(O_notePage2);
    }
    
    if(place_meeting(x, y, O_note3))
    {
         instance_create(view_xview[0] + 256, view_yview[0] + 192, O_notePage3);
    }
    else
    {
        instance_destroy(O_notePage3);
    }
    
    if(place_meeting(x, y, O_note4))
    {
         instance_create(view_xview[0] + 256, view_yview[0] + 192, O_notePage4);
    }
    else
    {
        instance_destroy(O_notePage4);
    }
    
    if(place_meeting(x, y, O_note5))
    {
         instance_create(view_xview[0] + 256, view_yview[0] + 192, O_notePage5);
    }
    else
    {
        instance_destroy(O_notePage5);
    }
    
    if(place_meeting(x, y, O_note6))
    {
         instance_create(view_xview[0] + 256, view_yview[0] + 192, O_notePage6);
    }
    else
    {
        instance_destroy(O_notePage6);
    }
    
    if(place_meeting(x, y, O_note7))
    {
         instance_create(view_xview[0] + 256, view_yview[0] + 192, O_notePage7);
    }
    else
    {
        instance_destroy(O_notePage7);
    }
    
    if(place_meeting(x, y, O_note8))
    {
         instance_create(view_xview[0] + 256, view_yview[0] + 192, O_notePage8);
    }
    else
    {
        instance_destroy(O_notePage8);
    }
}

if(instance_exists(O_terminal) ||
   instance_exists(O_terminal2) ||
   instance_exists(O_terminal3) ||
   instance_exists(O_terminal4))
{
    frozen = true;
}
else
{
    frozen = false;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="O_nextRoom">
      <action>
        <libid>1</libid>
        <id>224</id>
        <kind>0</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>0</useapplyto>
        <exetype>1</exetype>
        <functionname>action_another_room</functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>11</kind>
            <room>rm_level_2</room>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="6" enumb="53">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Shooting 

instance_create(x,y,Obj_bullet);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>draw_self();

draw_healthbar(x, y - 5, x + 30, y - 10, currentHealth/maxHealth * 100, c_black, c_red, c_green, 0, true, true);

if(place_meeting(x, y, O_doorInteraction))
{
    draw_set_colour(c_white);
    draw_set_font(fnt_text);
    draw_text(O_player.x - 17, O_player.y - 40, "Press E")
}

if(place_meeting(x, y, O_doorInteraction2))
{
    draw_set_colour(c_white);
    draw_set_font(fnt_text);
    draw_text(O_player.x - 17, O_player.y - 40, "Press E")
}

if(place_meeting(x, y, O_doorInteraction3))
{
    draw_set_colour(c_white);
    draw_set_font(fnt_text);
    draw_text(O_player.x - 17, O_player.y - 40, "Press E")
}

if(place_meeting(x, y, O_doorInteraction4))
{
    draw_set_colour(c_white);
    draw_set_font(fnt_text);
    draw_text(O_player.x - 17, O_player.y - 40, "Press E")
}

if(place_meeting(x, y, O_doorInteraction6))
{
    draw_set_colour(c_white);
    draw_set_font(fnt_text);
    draw_text(O_player.x - 17, O_player.y - 40, "Press E")
}

if(place_meeting(x, y, O_doorInteraction7))
{
    draw_set_colour(c_white);
    draw_set_font(fnt_text);
    draw_text(O_player.x - 17, O_player.y - 40, "Press E")
}

if(place_meeting(x, y, O_doorInteraction8))
{
    draw_set_colour(c_white);
    draw_set_font(fnt_text);
    draw_text(O_player.x - 17, O_player.y - 40, "Press E")
}

if(place_meeting(x, y, O_doorInteraction9))
{
    draw_set_colour(c_white);
    draw_set_font(fnt_text);
    draw_text(O_player.x - 17, O_player.y - 40, "Press E")
}

if(place_meeting(x, y, O_doorInteraction10))
{
    draw_set_colour(c_white);
    draw_set_font(fnt_text);
    draw_text(O_player.x - 17, O_player.y - 40, "Press E")
}

if(place_meeting(x, y, O_doorInteraction11))
{
    draw_set_colour(c_white);
    draw_set_font(fnt_text);
    draw_text(O_player.x - 17, O_player.y - 40, "Press E")
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
