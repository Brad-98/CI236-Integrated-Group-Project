<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>S_Player</spriteName>
  <solid>-1</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//Movement Vars
player_speed = 3;
hspd = 0;
vspd = 0;
player_friction = 1;

player_health = 100;

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>var left = keyboard_check(ord('A'));
var left2 = keyboard_check(vk_left);
var right = keyboard_check(ord('D'));
var right2 = keyboard_check(vk_right);
var down = keyboard_check(ord('S'));
var down2 = keyboard_check(vk_down);
var up = keyboard_check(ord('W'));
var up2 = keyboard_check(vk_up);

//Movement
if(!left || !left2 || right || right2)
{
    hspd = 0;
}

if(!up || !up2 || down || down2)
{
    vspd = 0;
}

if(left || left2)
{
    hspd = -player_speed;
}

if(right || right2)
{
    hspd = player_speed;
}

if(up || up2)
{
    vspd = -player_speed;
}

if(down || down2)
{
    vspd = player_speed;
}

if(place_meeting(x + hspd, y, O_wall))
{
    while(!place_meeting(x + sign(hspd), y, O_wall))
    {
        x += sign(hspd);
    }
    hspd = 0;
}

if(place_meeting(x, y + vspd, O_wall))
{
    while(!place_meeting(x, y + sign(vspd), O_wall))
    {
        y += sign(vspd);
    }
    vspd = 0;
}

x += hspd;
y += vspd;
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
